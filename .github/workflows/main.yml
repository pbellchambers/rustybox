name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Pipeline
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [ubuntu, macos, win32, win64]
        include:
          - build: ubuntu
            os: ubuntu-latest
            rust: stable
          - build: macos
            os: macos-latest
            rust: stable
          - build: win32
            os: windows-latest
            rust: stable-i686
          - build: win64
            os: windows-latest
            rust: stable-x86_64
    steps:
    - uses: actions/checkout@v2.3.4
    - name: Install Rust (rustup)
      run: |
        rustup update ${{ matrix.rust }} --no-self-update
        rustup default ${{ matrix.rust }}
        rustup component add rustfmt
        rustup component add clippy
    - name: Build
      run: cargo build --verbose
    - name: Format Check
      run: |
        cargo fmt --version
        cargo fmt -- --check --verbose
    - name: Lint Check
      run: |
        cargo clippy --version
        cargo clippy -- --verbose -D warnings
    - name: Test
      run: cargo test --verbose
    - name: Build Release
      run: cargo build --release --verbose
    - name: Move Artifacts Client (ubuntu)
      if: ${{ matrix.build == 'ubuntu' }}
      run: |
        cp target/release/rustyhack_client rustyhack_client
        chmod +x rustyhack_client
        tar -cvzf rustyhack_client-ubuntu.tar.gz rustyhack_client
    - name: Move Artifacts Server (ubuntu)
      if: ${{ matrix.build == 'ubuntu' }}
      run: |
        cp target/release/rustyhack_server rustyhack_server
        chmod +x rustyhack_server
        tar -cvzf rustyhack_server-ubuntu.tar.gz rustyhack_server assets
    - name: Move Artifacts Client (macos)
      if: ${{ matrix.build == 'macos' }}
      run: |
        cp target/release/rustyhack_client rustyhack_client
        chmod +x rustyhack_client
        tar -cvzf rustyhack_client-macos.tar.gz rustyhack_client
    - name: Move Artifacts Server (macos)
      if: ${{ matrix.build == 'macos' }}
      run: |
        cp target/release/rustyhack_server rustyhack_server
        chmod +x rustyhack_server
        tar -cvzf rustyhack_server-macos.tar.gz rustyhack_server assets
    - name: Move Artifacts Client (win32)
      if: ${{ matrix.build == 'win32' }}
      run: copy target\release\rustyhack_client.exe rustyhack_client.exe
    - name: Move Artifacts Client (win64)
      if: ${{ matrix.build == 'win64' }}
      run: copy target\release\rustyhack_client.exe rustyhack_client.exe
    - name: Move Artifacts Server (win32)
      if: ${{ matrix.build == 'win32' }}
      run: copy target\release\rustyhack_server.exe rustyhack_server.exe
    - name: Move Artifacts Server (win64)
      if: ${{ matrix.build == 'win64' }}
      run: copy target\release\rustyhack_server.exe rustyhack_server.exe
    - name: Upload Artifact Client (ubuntu)
      if: ${{ matrix.build == 'ubuntu' }}
      uses: actions/upload-artifact@v2.2.2
      with:
        name: rustyhack_client-${{ matrix.build }}
        path: rustyhack_client-ubuntu.tar.gz
    - name: Upload Artifact Client (macos)
      if: ${{ matrix.build == 'macos' }}
      uses: actions/upload-artifact@v2.2.2
      with:
        name: rustyhack_client-${{ matrix.build }}
        path: rustyhack_client-macos.tar.gz
    - name: Upload Artifact Client (win32)
      if: ${{ matrix.build == 'win32' }}
      uses: actions/upload-artifact@v2.2.2
      with:
        name: rustyhack_client-${{ matrix.build }}
        path: |
          rustyhack_client.exe
    - name: Upload Artifact Client (win64)
      if: ${{ matrix.build == 'win64' }}
      uses: actions/upload-artifact@v2.2.2
      with:
        name: rustyhack_client-${{ matrix.build }}
        path: |
          rustyhack_client.exe
    - name: Upload Artifact Server (ubuntu)
      if: ${{ matrix.build == 'ubuntu' }}
      uses: actions/upload-artifact@v2.2.2
      with:
        name: rustyhack_server-${{ matrix.build }}
        path: rustyhack_server-ubuntu.tar.gz
    - name: Upload Artifact Server (macos)
      if: ${{ matrix.build == 'macos' }}
      uses: actions/upload-artifact@v2.2.2
      with:
        name: rustyhack_server-${{ matrix.build }}
        path: rustyhack_server-macos.tar.gz
    - name: Upload Artifact Server (win32)
      if: ${{ matrix.build == 'win32' }}
      uses: actions/upload-artifact@v2.2.2
      with:
        name: rustyhack_server-${{ matrix.build }}
        path: |
          rustyhack_server.exe
          assets\**\*
    - name: Upload Artifact Server (win64)
      if: ${{ matrix.build == 'win64' }}
      uses: actions/upload-artifact@v2.2.2
      with:
        name: rustyhack_server-${{ matrix.build }}
        path: |
          rustyhack_server.exe
          assets\**\*

  update_release_draft:
    runs-on: ubuntu-latest
    steps:
      - uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
